{% set user = "logout" %}
{% set title = "신한 UX라이팅 시스템 | 공지사항" %}
{% extends "../templates/layout.njk" %}
{% set activePage = "faq" %}
{% block content %}
  {{super()}}
  <div class="ly-content">
    <div class="ly-content-box">
      <div class="title title--center">
        <h2 class="text ft24 bold">문의</h2>
        <button type="button" class="button button--type4 button--medium" data-dialog-trigger="#modal2">직접 문의하기</button>
      </div>

      <!-- 검색박스 영역 -->
      <div class="search-box search-box--small search-box--between">
        <div class="search-box__wrap">
          <div class="input-box">
            <input name="search" type="text" class="input" placeholder="검색어을 입력해주세요." value="구ㅏㅡ"/>
            <button type="button" class="ic-button-clear" data-visible aria-label="클리어버튼" aria-pressed="false" onclick="Input.ClearButton(this)">
              <i class="ic ic-clear" aria-hidden="true"></i>
            </button>
            <button type="button" class="ic-button-search" aria-label="검색버튼">
              <i class="ic ic-search--small" aria-hidden="true"></i>
            </button>
          </div>
          {% include 'contents/sorting.njk'%}
        </div>
      </div>
      <!-- //검색박스 영역 -->
      <!-- 데이터가 없을시 오픈 -->
      <div class="none-data none-data--info__type2 pxh500">
        <p>
          <span class="text-blue">
                        ‘구ㅏㅡ’
                    </span> 를 포함하는<br/>검색결과가 없습니다.</p>
        <span>
                    궁금한 사항을 직접 문의해보세요.
                </span>
        <div class="button-group">
          <button class="button button--type1 button--medium" type="button" data-dialog-trigger="#modal2">직접 문의하기</button>
        </div>
      </div>
      <!-- //데이터가 없을시 오픈 -->
    </div>
  </div>

  <!-- 문의하기 팝업 -->
  {% include "../templates/popup/inquiry_popup01.njk" %}
  <!-- //문의하기 팝업 -->

{% endblock %}

{% block scripts %}
  <script>
    const Input = {
      // 에러
      Error: function (props) {
        const ARIA_HIDDEN = 'aria-hidden';
        const input = props.parentElement;
        const label = input
          .nextElementSibling
          .classList
          .contains('error');
        input
          .classList
          .add('error');
        if (!label) {
          return;
        }

        const get = input
          .nextElementSibling
          .getAttribute(ARIA_HIDDEN);
        if (get === 'true') {
          input
            .nextElementSibling
            .setAttribute(ARIA_HIDDEN, false);
        }
      },

      // 에러 클리어
      Clear: function (props) {
        const ARIA_HIDDEN = 'aria-hidden';
        const input = props.parentElement;
        const label = input
          .nextElementSibling
          .classList
          .contains('error');
        input
          .classList
          .remove('error');
        if (!label) {
          return;
        }

        const get = input
          .nextElementSibling
          .getAttribute(ARIA_HIDDEN);
        if (get === 'false') {
          input
            .nextElementSibling
            .setAttribute(ARIA_HIDDEN, true);
        }
      },

      // value 삭제버튼
      ClearButton: function (param) {
        if (!param.previousElementSibling) {
          return;
        }

        if (param.previousElementSibling.tagName === 'INPUT') {
          param.previousElementSibling.value = '';
          param
            .classList
            .remove('is-active');

          if (param.previousElementSibling.getAttribute('name') === 'id') {
            const target = document.querySelector('[name="password"]');
            const passwordParent = target.closest('.input-box');
            passwordParent.style.height = '';
            passwordParent.style.marginTop = '0';

            passwordParent
              .classList
              .add('expanding');
            passwordParent
              .classList
              .remove('expand');
            passwordParent
              .classList
              .remove('expanded');
          }
        }
      },

      // InputBox value Checker
      Check: function () {
        const elements = document.querySelectorAll('.input-box');

        const onInput = function (event) {
          const value = event.target.value;
          const length = value.length;
          const nextEl = event.target.nextElementSibling;
          if (!nextEl) {
            return;
          }
          if (length > 0) {
            nextEl
              .classList
              .add('is-active');
          } else {
            nextEl
              .classList
              .remove('is-active');
          }
        };
        []
          .forEach
          .call(elements, item => {
            const target = item.querySelector('.input');
            target.addEventListener('keyup', onInput);
            target.addEventListener('keydown', onInput);
            target.addEventListener('change', onInput);
          });
      }
    };

    document.addEventListener('DOMContentLoaded', function () {
      Input.Check();
    })
  </script>

{% endblock %}