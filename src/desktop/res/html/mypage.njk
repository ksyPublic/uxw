{% set user = 'logout' %}
{% set title = '신한 UX라이팅 시스템 | 마이페이지' %}
{% extends '../templates/layout.njk' %}

{% block content %}
	{{ super() }}
	<div class="ly-content">
		<div
			class="ly-content-box">
			<!-- 마이페이지 탭 영역 -->
			{% include '../templates/contents/mypage_tab.njk' %}
			<!-- //마이페이지 탭 영역 -->
		</div>
	</div>
	<!-- 사이드 영역 220913 ID추가 -->
	<div class="side" id="side">
		<div class="side__wrap is-active">
			<h3 class="sr-only">교정 가이드</h3>
			<div class="side__inner">
				<div class="cumulative">
					<p class="cumulative__list">
						<span class="highlight">김신한</span>님은<br/>
						총
						<span class="cumulative__count">292</span>건 콘텐츠를<br/>
						교정했어요.
					</p>
					<span class="cumulative__date">2022년 기준</span>
				</div>
				<div id="personalization" class="user-personal">
					<h4 class="ft18 medium">김신한님을 위한 추천 표현</h4>
					<div
						class="expresstion expresstion--type2">
						<!-- 데이터가 없을시 오픈 -->
						<div class="none-data none-data--beinfo pxh260" data-none>
							<p>
								새로운 글을 작성하고<br/>
								추천표현을 확인해보세요.
							</p>
						</div>
						<!-- //데이터가 없을시 오픈 -->
						<ul class="expresstion-group">
							<li class="expresstion-list">
								<span>네비게이션</span>
								<i class="ic ic-expresstion-arrow--type2" aria-hidden="true"></i>
								<span>내비게이션</span>
							</li>
							<li class="expresstion-list">
								<span>개인종합자산관리계좌 (ISA)</span>
								<i class="ic ic-expresstion-arrow--type2" aria-hidden="true"></i>
								<span>ISA (개인종합자산관리계좌)</span>
							</li>
							<li class="expresstion-list">
								<span>라이센스</span>
								<i class="ic ic-expresstion-arrow--type2" aria-hidden="true"></i>
								<span>라이선스</span>
							</li>
							<li class="expresstion-list">
								<span>휴대폰 인증서 서비스(UBIKey)</span>
								<i class="ic ic-expresstion-arrow--type2" aria-hidden="true"></i>
								<span>휴대폰 인증서 서비스(유비키)</span>
							</li>
							<li class="expresstion-list">
								<span>추산</span>
								<i class="ic ic-expresstion-arrow--type2" aria-hidden="true"></i>
								<span>어림잡다</span>
							</li>
						</ul>
					</div>
				</div>

				<!-- 문의내역 -->
				<div class="box mgt30 grey50-bg">
					<div class="title--type2">
						<h4 class="text ft18 medium">내 문의내역</h4>
						<button class="button button--type4 button--medium" type="button" data-dialog-trigger="#modal2">문의하기</button>
					</div>
					<!-- 데이터가 없을시 오픈 -->
					<div class="none-data none-data--beinfo pxh128" data-none>
						<p>
							콘텐츠 목록이 비어있어요.<br/>새로운 콘텐츠를 작성해주세요.
						</p>
					</div>
					<!-- //데이터가 없을시 오픈 -->

					<!-- 문의내역 리스트 : 데이터가 없을시 제거 -->
					<div class="list list-view mgt18 mxh112">
						<div class="list__item">
							<label class="label-ct">답변대기</label>
							<a class="text-link ellipsis" href="#none" data-dialog-trigger="#modal4">고객언어란 무엇입니까?</a>
						</div>
						<div class="list__item">
							<label class="label-ct label-ct--type3">용어제안</label>
							<a class="text-link ellipsis" href="#none">교정중인 콘텐츠를 제안합니다 교정중인 콘텐츠를 제안합니다</a>
						</div>
						<div class="list__item">
							<label class="label-ct label-ct--type2">답변완료</label>
							<a class="text-link ellipsis" href="#none" data-dialog-trigger="#modal3">개인 계정 사용시 어떻게 적용하나요?</a>
						</div>
						<div class="list__item">
							<label class="label-ct label-ct--type3">용어문의</label>
							<a class="text-link ellipsis" href="#none" data-dialog-trigger="#modal5">문의사항 남깁니다.</a>
						</div>
					</div>
					<!-- //문의내역 리스트 -->
				</div>
				<!-- //문의내역 -->
			</div>
		</div>
	</div>
	<!-- //사이드 영역 -->

	<!-- 문의하기 팝업 -->
	{% include '../templates/popup/inquiry_popup01.njk' %}
	<!-- //문의하기 팝업 -->

	<!-- 답변완료 팝업 -->
	{% include '../templates/popup/inquiry_popup02.njk' %}
	<!-- //답변완료 팝업 -->

	<!-- 답변대기 팝업 -->
	{% include '../templates/popup/inquiry_popup03.njk' %}
	<!-- //답변대기 팝업 -->

	<!-- 용어문의 팝업 -->
{% include '../templates/popup/inquiry_popup04.njk' %}
	<!-- //용어문의 팝업 -->
{% endblock %}
{% block scripts %}
	<script>
		function bookAdd(param) { // 북마크 클릭시 ui 변경
const dataChecker = param.getAttribute('data-toggle');
if (dataChecker === 'false') {
param.setAttribute('data-toggle', 'true');
}
}

function bookRemove(param) { // 북마크 클릭시 ui 변경
const dataChecker = param.getAttribute('data-toggle');
if (dataChecker === 'true') {
param.setAttribute('data-toggle', 'false');
}
}

const Input = { // 에러
Error: function (props) {
const ARIA_HIDDEN = 'aria-hidden';
const input = props.parentElement;
const label = input.nextElementSibling.classList.contains('error');
input.classList.add('error');
if (! label) {
return;
}

const get = input.nextElementSibling.getAttribute(ARIA_HIDDEN);
if (get === 'true') {
input.nextElementSibling.setAttribute(ARIA_HIDDEN, false);
}
},

// 에러 클리어
Clear: function (props) {
const ARIA_HIDDEN = 'aria-hidden';
const input = props.parentElement;
const label = input.nextElementSibling.classList.contains('error');
input.classList.remove('error');
if (! label) {
return;
}

const get = input.nextElementSibling.getAttribute(ARIA_HIDDEN);
if (get === 'false') {
input.nextElementSibling.setAttribute(ARIA_HIDDEN, true);
}
},

// value 삭제버튼
ClearButton: function (param) {
if (! param.previousElementSibling) {
return;
}

if (param.previousElementSibling.tagName === 'INPUT') {
param.previousElementSibling.value = '';
param.classList.remove('is-active');

if (param.previousElementSibling.getAttribute('name') === 'id') {
const target = document.querySelector('[name="password"]');
const passwordParent = target.closest('.input-box');
passwordParent.style.height = '';
passwordParent.style.marginTop = '0';

passwordParent.classList.add('expanding');
passwordParent.classList.remove('expand');
passwordParent.classList.remove('expanded');
}
}
},

// InputBox value Checker
Check: function () {
const elements = document.querySelectorAll('.input-box');

const onInput = function (event) {
const value = event.target.value;
const length = value.length;
const nextEl = event.target.nextElementSibling;
if (! nextEl) {
return;
}
if (length > 0) {
nextEl.classList.add('is-active');
} else {
nextEl.classList.remove('is-active');
}
};
[].forEach.call(elements, item => {
const target = item.querySelector('.input');
target.addEventListener('keyup', onInput);
target.addEventListener('keydown', onInput);
target.addEventListener('change', onInput);
});
}
};

document.addEventListener('DOMContentLoaded', function () {
Input.Check();
});
	</script>
{% endblock %}
